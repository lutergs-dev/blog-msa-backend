version: 2.1

orbs:
  aws-cli: circleci/aws-cli@5.1.0
  aws-ecr: circleci/aws-ecr@9.3.4

parameters:
  user-service:
    type: boolean
    default: false
  run-them-all:
    type: boolean
    default: false

jobs:
  test-user-service:
    docker:
      - image: cimg/openjdk:21
    resource_class: lutergs/lutergs-minipc
    steps:
      - run:
          name: Test Java
          command: |
            ./gradlew User:test
  build-user-service:
    docker:
      - image: cimg/openjdk:21
    resource_class: lutergs/lutergs-oracle-cloud
    steps:
      - run:
          name: Get User service version
          command: |
            echo "export VERSION=$(./gradlew User:properties | grep '^version:' | awk '{print $2}')" >> "$BASH_ENV"
            source "$BASH_ENV"
      - run:
          name: Build Jar
          command: |
            ./gradlew User:bootJar



workflows:
  user-service:
    when:
      or:
        - << pipeline.parameters.user-service >>
        - equal: [ main, << pipeline.git.branch >> ]
    jobs:
      - test-user-service
      - build-user-service
      - aws-ecr/build_and_push_image:
          resource_class: lutergs/lutergs-oracle-cloud
          repo: lutergs-backend-user-service
          tag: ${VERSION}
          create_repo: true
          dockerfile: "User/Dockerfile"
          executors: base
          extra_build_args: '--compress --build-arg VERSION=$VERSION'
          no_output_timeout: 20m
          path: "User/"
          platform: linux/arm64
          public_registry: false
          push_image: true
          region: ${AWS_REGION}
          set_repo_policy: true
          skip_when_tags_exist: false
