version: 2.1

orbs:
  aws-cli: circleci/aws-cli@5.1.0
  aws-ecr: circleci/aws-ecr@9.3.4

parameters:
  user-service:
    type: boolean
    default: false
  util-updated:
    type: boolean
    default: false

jobs:
  test-user-service:
    docker:
      - image: cimg/openjdk:21.0.4
    resource_class: lutergs/minipc-kubernetes
    steps:
      - checkout
      - run:
          name: Test Java
          command: |
            ./gradlew User:test
  build-user-service:
    docker:
      - image: cimg/openjdk:21.0.4
    resource_class: lutergs/minipc-kubernetes
    steps:
      - checkout
      - run:
          name: Get User service version
          command: |
            echo "export VERSION=$(./gradlew User:properties | grep '^version:' | awk '{print $2}')" >> "$BASH_ENV"
            source "$BASH_ENV"
  aws-build-and-publish-image:
    resource_class: lutergs/minipc-kubernetes
    steps:
      - aws-ecr/build_and_push_image:
          repo: lutergs-backend-user-service
          account_id: ${}
          tag: latest,${VERSION}
          auth:
            - aws-cli/setup:
                profile_name: default
                region: ap-northeast-2
          create_repo: true
          dockerfile: "User/Dockerfile"
          extra_build_args: '--compress --build-arg VERSION=$VERSION'
          no_output_timeout: 20m
          path: "User/"
          platform: linux/arm64
          public_registry: false
          profile_name: defailt
          push_image: true
          region: ${AWS_REGION}
          set_repo_policy: true
          skip_when_tags_exist: false


workflows:
  user-service:
#    when:
#      and:
#        - equal: [ "main", << pipeline.git.branch >> ]
#        - or:
#          - equal: [ "true", << pipeline.parameters.user-service >>]
#          - equal: [ "true", << pipeline.parameters.util-updated >>]


    jobs:
      - test-user-service
      - build-user-service
      - aws-build-and-publish-image:
          context: aws

