version: 2.1

orbs:
  aws-cli: circleci/aws-cli@5.1.0
  aws-ecr: circleci/aws-ecr@9.3.4

parameters:
  user-service:
    type: boolean
    default: false
  util-updated:
    type: boolean
    default: false

jobs:
  test-and-set-version-user-service:
    docker:
      - image: cimg/openjdk:21.0.4
    resource_class: lutergs/minipc-kubernetes
    steps:
      - checkout
      - run:
          name: Test Java
          command: |
            gradle User:test
      - run:
          name: Get User service version
          command: |
            mkdir -p workspace
            echo "export VERSION=$(./gradlew User:properties | grep '^version:' | awk '{print $2}')" >> workspace/version
      - persist_to_workspace:
          root: workspace
          paths:
            - version
  aws-build-and-publish-image:
    resource_class: lutergs/minipc-machine
    machine: true
    steps:
      - checkout
      - run:
          name: create workspace dir
          command: |
            mkdir ./workspace
      - attach_workspace:
          at: ./workspace
      - run:
          name: set variable
          command: |
            source ./workspace/version
      - run:
          name: Build and publish to AWS ECR
          run: |
            cd User
            
            aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.ap-northeast-2.amazonaws.com
            docker buildx build --comporess --platform linux/arm64 \
              -t $AWS_ACCOUNT_ID.dkr.ecr.ap-northeast-2.amazonaws.com/lutergs-backend:$VERSION \
              -t $AWS_ACCOUNT_ID.dkr.ecr.ap-northeast-2.amazonaws.com/lutergs-backend:latest \
              . 
            
            docker push $AWS_ACCOUNT_ID.dkr.ecr.ap-northeast-2.amazonaws.com/lutergs-backend:$VERSION
            docker push $AWS_ACCOUNT_ID.dkr.ecr.ap-northeast-2.amazonaws.com/lutergs-backend:latest


workflows:
  user-service:
#    when:
#      and:
#        - equal: [ "main", << pipeline.git.branch >> ]
#        - or:
#          - equal: [ "true", << pipeline.parameters.user-service >>]
#          - equal: [ "true", << pipeline.parameters.util-updated >>]


    jobs:
      - test-and-set-version-user-service
      - aws-build-and-publish-image:
          context: aws
          requires:
            - test-and-set-version-user-service

